# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
myenv/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, uncomment the following line:
#.idea/

# VS Code
.vscode/

# Machine Learning specific
# Model files (can be large) - COMMENTED OUT FOR STREAMLIT DEPLOYMENT
# *.pth
# *.pt
# *.h5
# *.keras
# *.pkl
# *.joblib
# *.onnx
# *.tflite
# *.pb

# Dataset files (can be very large)
*.csv
*.json
*.parquet
*.feather
*.hdf5
*.h5

# Image files (if not part of the project)
*.jpg
*.jpeg
*.png
*.gif
*.bmp
*.tiff
*.webp
*.avif

# Audio files
*.wav
*.mp3
*.flac
*.aac

# Video files
*.mp4
*.avi
*.mov
*.mkv

# Logs
*.log
logs/
tensorboard_logs/
wandb/

# Temporary files
*.tmp
*.temp
temp/
tmp/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk

# Project specific
# Exclude uploaded images from the web app
*.jpg
*.jpeg
*.png
# But keep the sample images
!AI-generated.jpg
!978ed4ab-5030-464b-8b97-bd40f2e6b4ab.jpg
!real person.avif

# Keep the dataset structure but ignore the actual image files
real_vs_fake/**/*.jpg
real_vs_fake/**/*.jpeg
real_vs_fake/**/*.png

# Development and testing files
test_model.py
test_feedback.py
check_deployment.py

# Documentation files
FEEDBACK_GUIDE.md
DEPLOYMENT_GUIDE.md

# Model files
model_backup.pth
model_retrained.pth
real_vs_fake.keras
real_vs_fake.h5

# Data and feedback files
feedback_data/
real_vs_fake/

# IDE and editor files
.vscode/
.idea/

# Python cache
__pycache__/
*.pyc
*.pyo
*.pyd

# Environment files
myenv/
.env
.venv/ 